<issue id="stored-cross-site-scripting">
	<name>
		<en></en>
		<cz>Stored Cross Site Scripting (XSS)</cz>
	</name>
	<category>OTG-INPVAL-002 - Testing for Stored Cross Site Scripting</category>
	<risk>high</risk>
	<likelihood>high</likelihood>
	<impact>medium</impact>
	<whocanexploit></whocanexploit>
	<references></references>
	<tfinding>
		<en>It has been found...</en>
		<cz>
%Během penetračního testu bylo zjištěno, že na uvedených vstupech nedochází k filtrování uživatelem vkládaných dat. Zadaná data jsou poté vypsána zpět do kódu webové stránky, což může vést k útoku zvanému Cross Site Scripting. Konkrétně se jedná o 

Během penetračního testu bylo zjištěno, že při uploadu Certificate Signing Request (CSR) na adrese https://example/com/ssl/extended\_validation\_single.php nedochází při výpisu adresy v kroku 2 k filtrování dat získaných z nedůvěryhodného vstupu (obsahu CSR). Zadaná data jsou poté vypsána zpět do kódu webové stránky, což může vést k útoku zvanému Cross Site Scripting. Konkrétně se jedná o položku Common Name v CSR.

%Útočník může útočný CSR připravit například následovně (pomocí dříve vygenerovaného klíče umístěného na \textasciitilde{}/a/domain.com.key):
%\footnotesize
\begin{lstlisting}
%$ openssl req -new -sha256 -key ~/a/domain.com.key -out ~/a/domain.com.csr
%[.. snip ..]
%Country Name (2 letter code) [AU]:CZ
%State or Province Name (full name) [Some-State]:
%Locality Name (eg, city) []:a
%Organization Name (eg, company) [Internet Widgits Pty Ltd]:a
%Organizational Unit Name (eg, section) []:s
%Common Name (e.g. server FQDN or YOUR name) []:<script>alert(1);</script>
%Email Address []:
%[.. snip ..]
%\end{lstlisting}
\normalsize

%\begin{figure}[H]
%\centering
%\includegraphics[width=150mm]{"img/xss"}
%\caption{Provedení XSS po nahrání CSR}
%\end{figure}
		</cz>
	</tfinding>
	<trisk>
		<en></en>
		<cz>
Možnost ovlivnění informací na webu pomocí útoku XSS může vést například k poškození pověsti provozovatele webové aplikace. Může také dojít k jinému typu škody v závislosti na charakteru podvržené informace.
Dalším rizikem je odcizení session ID, které udržuje uživatelskou relaci v dané webové aplikaci. Pomocí útoku XSS může dojít k jeho odcizení a s ním i k odcizení uživatelské relace. Útočník také může spouštět skripty v kontextu napadené aplikace či například zneužít klientský systém jako XSS Proxy.
		</cz>
	</trisk>
	<trecommendation>
		<en></en>
		<cz>
Doporučujeme zkontrolovat všechny funkce, které pracují s jakýmikoliv uživateli ovlivnitelnými vstupy a případně upravit jejich funkcionalitu tak, aby obsahovaly filtrování veškerých nedůvěryhodných vstupů, ať již od uživatele (formuláře, identifikace prohlížeče, cookies, ...) nebo jiného potenciálně nedůvěryhodného subsystému.
Vstupy doporučujeme filtrovat principem whitelist, kdy jsou přijaty pouze řetězce obsahující pouze povolené znaky. Ty by měly být například a-zA-Z0-9. Dále doporučujeme vždy jasně specifikovat odchozí kódování dat.
		</cz>
	</trecommendation>
	<tsteps>
		<en>

		</en>
		<cz>

		</cz>
	</tsteps>
</issue>

